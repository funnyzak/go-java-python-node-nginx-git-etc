name: Docker Image Publish
on:
  push:
    paths-ignore:
      - 'README*'
      - 'LICENSE'
      - 'CHANGELOG*'
      - 'CONTRIBUTING*'
  workflow_call:
    inputs:
      tags:
        description: 'Docker image tag list, multiple tags are separated by comma, e.g. 0.1.0,latest'
        required: true
        type: string
        default: 'latest'
      docker_file:
        description: 'Dockerfile path'
        required: false
        type: string
        default: 'Dockerfile'
  workflow_dispatch:
    inputs:
      tags:
        required: true
        type: string
        default: 'latest'
      docker_file:
        required: false
        type: string
        default: 'Dockerfile'

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'|| github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call' || github.event.pull_request.merged == 'true' || github.event_name == 'push'
    outputs:
      TAG_NAME: ${{ steps.set_tag_name.outputs.TAG_NAME }}
      DOCKER_FILE: ${{ steps.set_tag_name.outputs.DOCKER_FILE }}
      BUILD_TRIGGER_DESCRIPTION: ${{ steps.set_tag_name.outputs.BUILD_TRIGGER_DESCRIPTION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Set tag name
        id: set_tag_name
        run: |
          replace_comma_with_tag() {
            new_tags=""
            for tag in $(echo $1 | tr ',' ' '); do
              new_tags="$new_tags ${{ github.repository }}:$tag"
            done
            echo $new_tags | tr ' ' ','
          }

          {
            echo "DOCKER_FILE=Dockerfile"
            if [ -n "${{ github.event.inputs.tags }}" ]; then
              echo "TAG_NAME=$(replace_comma_with_tag ${{ github.event.inputs.tags }})"
              echo "DOCKER_FILE=${{ github.event.inputs.docker_file }}"
              echo "BUILD_TRIGGER_DESCRIPTION=Triggered via workflow_dispatch with tag ${{ github.event.inputs.tags }}"
            elif [ -n "${{ inputs.tags }}" ]; then
              echo "TAG_NAME=$(replace_comma_with_tag ${{ inputs.tags }})"
              echo "DOCKER_FILE=${{ inputs.docker_file }}"
              echo "BUILD_TRIGGER_DESCRIPTION=Triggered via workflow_call with tag ${{ inputs.tags }}"
            elif [ "${{ github.ref_type }}" == 'tag' ]; then
              echo "TAG_NAME=${{ github.repository }}:${{ github.ref_name }}"
              echo "BUILD_TRIGGER_DESCRIPTION=Triggered via tag ${{ github.ref_name }}"
            elif [ "${{ github.event_name }}" == 'push' ]; then
              # echo "TAG_NAME=${{ github.repository }}:$(git rev-parse --short HEAD)"
              echo "TAG_NAME=${{ github.repository }}:nightly"
              echo "BUILD_TRIGGER_DESCRIPTION=Triggered via push to ${{ github.ref_name }}"
            elif [ "${{ github.event.pull_request.merged }}" == 'true' ]; then
              echo "TAG_NAME=${{ github.repository }}:$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)"
              echo "BUILD_TRIGGER_DESCRIPTION=Triggered via pull request ${{ github.event.pull_request.number }}"
            else
              echo "TAG_NAME="
            fi
          } >> $GITHUB_OUTPUT


  docker-release:
    name: Docker Build and Release
    needs: [setup]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: needs.setup.outputs.TAG_NAME != ''
    steps:
      - name: Build trigger description
        run: |
          echo "The build trigger description is ${{ needs.setup.outputs.BUILD_TRIGGER_DESCRIPTION }}"
          echo "The publish docker image tag is ${{ needs.setup.outputs.TAG_NAME }}"
          echo "The docker file is ${{ needs.setup.outputs.DOCKER_FILE }}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to ALIYUNCS
        uses: docker/login-action@v3
        with:
          registry: registry.cn-beijing.aliyuncs.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ALIYUNCS_PASSWORD }}

      - name: Docker build and push
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: ${{ needs.setup.outputs.DOCKER_FILE }}
          build-args: |
            VCS_REF=${{ github.sha }}
            TAG=${{ needs.setup.outputs.TAG_NAME }}
          push: true
          tags: |
            ${{ needs.setup.outputs.TAG_NAME }}
            registry.cn-beijing.aliyuncs.com/${{ needs.setup.outputs.TAG_NAME }}
          platforms: |
            linux/amd64

      - name: Release
        uses: softprops/action-gh-release@v2.0.8
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
        with:
          files: |
            ${{ needs.setup.outputs.DOCKER_FILE }}
          draft: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push-message:
      name: Push message
      runs-on: ubuntu-latest
      needs: [docker-release]
      steps:
        - name: Push message
          uses: funnyzak/pushoo-action@main
          with:
            platforms: ifttt,wecombot,bark
            tokens: ${{ secrets.PUSH_TOKEN }}
            content: |
              # ${{ github.event.repository.name }} Docker Build Success
              ## trigger: ${{ github.event_name }} at ${{ github.event.head_commit.timestamp }}
              ## commit message: ${{ github.event.head_commit.message }}
              ## commit url: ${{ github.event.head_commit.url }}
              ## commit author: ${{ github.event.head_commit.author.name }}
              ## commit email: ${{ github.event.head_commit.author.email }}
              ## commit id: ${{ github.event.head_commit.id }}
            title: |
              ${{ github.repository }} ${{ github.event_name }} Message
            options: '{"bark": { "url": "https://github.com/${{github.repository}}" }}'
            debug: false
